# Description: Testing matrix_divided function

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

# Test Case 1: Basic division
>>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
>>> div = 2
>>> matrix_divided(matrix, div)
[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0], [3.5, 4.0, 4.5]]

# Test Case 2: Dividing by zero (should raise a ZeroDivisionError)
>>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
>>> div = 0
Traceback (most recent call last):
  ...
ZeroDivisionError: division by zero

# Test Case 3: Non-numeric element in matrix (should raise a TypeError)
>>> matrix = [[1, 2, 'a'], [4, 5, 6], [7, 8, 9]]
>>> div = 2
Traceback (most recent call last):
  ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Test Case 4: Rows of different sizes (should raise a TypeError)
>>> matrix = [[1, 2, 3], [4, 5], [7, 8, 9]]
>>> div = 2
Traceback (most recent call last):
  ...
TypeError: Each row of the matrix must have the same size

# Test Case 5: Dividing by a non-numeric value (should raise a TypeError)
>>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
>>> div = '2'
Traceback (most recent call last):
  ...
TypeError: div must be a number

# Test Case 6: All elements are integers
>>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
>>> div = 1
>>> matrix_divided(matrix, div)
[[1.0, 2.0, 3.0], [4.0, 5.0, 6.0], [7.0, 8.0, 9.0]]